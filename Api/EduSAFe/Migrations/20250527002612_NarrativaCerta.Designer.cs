// <auto-generated />
using System;
using EduSAFe.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EduSAFe.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250527002612_NarrativaCerta")]
    partial class NarrativaCerta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("EduSAFe.Models.Abstractions.Lesson", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Lesson");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Lesson");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("EduSAFe.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("tinyint(1)");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer");
                });

            modelBuilder.Entity("EduSAFe.Models.FlashCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("LessonId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("LessonId");

                    b.HasIndex("UserId");

                    b.ToTable("FlashCards");
                });

            modelBuilder.Entity("EduSAFe.Models.Narrativa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Texto")
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Narrativas");
                });

            modelBuilder.Entity("EduSAFe.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("QuizId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuizId");

                    b.ToTable("Question");
                });

            modelBuilder.Entity("EduSAFe.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("varchar(25)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("XP")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EduSAFe.Models.Quiz", b =>
                {
                    b.HasBaseType("EduSAFe.Models.Abstractions.Lesson");

                    b.Property<bool>("IsInteractiveStory")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("MinCorrectAnswers")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue("Quiz");
                });

            modelBuilder.Entity("EduSAFe.Models.Abstractions.Lesson", b =>
                {
                    b.HasOne("EduSAFe.Models.User", null)
                        .WithMany("UserLessons")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("EduSAFe.Models.Answer", b =>
                {
                    b.HasOne("EduSAFe.Models.Question", null)
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId");
                });

            modelBuilder.Entity("EduSAFe.Models.FlashCard", b =>
                {
                    b.HasOne("EduSAFe.Models.Abstractions.Lesson", null)
                        .WithMany("FlashCards")
                        .HasForeignKey("LessonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EduSAFe.Models.User", null)
                        .WithMany("FlashCards")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("EduSAFe.Models.Question", b =>
                {
                    b.HasOne("EduSAFe.Models.Quiz", null)
                        .WithMany("Questions")
                        .HasForeignKey("QuizId");
                });

            modelBuilder.Entity("EduSAFe.Models.Abstractions.Lesson", b =>
                {
                    b.Navigation("FlashCards");
                });

            modelBuilder.Entity("EduSAFe.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("EduSAFe.Models.User", b =>
                {
                    b.Navigation("FlashCards");

                    b.Navigation("UserLessons");
                });

            modelBuilder.Entity("EduSAFe.Models.Quiz", b =>
                {
                    b.Navigation("Questions");
                });
#pragma warning restore 612, 618
        }
    }
}
